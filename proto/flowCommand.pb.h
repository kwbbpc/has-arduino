/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Sat Mar 02 14:46:22 2019. */

#ifndef PB_FLOWCOMMAND_PB_H_INCLUDED
#define PB_FLOWCOMMAND_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _FlowCommandMessage {
    bool has_pinNumber;
    int32_t pinNumber;
    bool has_isOn;
    bool isOn;
    bool has_runTimeMs;
    int32_t runTimeMs;
/* @@protoc_insertion_point(struct:FlowCommandMessage) */
} FlowCommandMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define FlowCommandMessage_init_default          {false, 0, false, 0, false, 0}
#define FlowCommandMessage_init_zero             {false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define FlowCommandMessage_pinNumber_tag         1
#define FlowCommandMessage_isOn_tag              2
#define FlowCommandMessage_runTimeMs_tag         3

/* Struct field encoding specification for nanopb */
extern const pb_field_t FlowCommandMessage_fields[4];

/* Maximum encoded size of messages (where known) */
#define FlowCommandMessage_size                  24

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define FLOWCOMMAND_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
